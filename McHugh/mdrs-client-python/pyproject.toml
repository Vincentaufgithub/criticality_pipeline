[tool.poetry]
name = "mdrs-client-python"
version = "1.3.7"
description = "The mdrs-client-python is python library and a command-line client for up- and downloading files to and from MDRS based repository."
authors = ["Yoshihiro OKUMURA <yoshihiro.okumura@riken.jp>"]
license = "MIT"
readme = "README.md"
classifiers=[
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "OSI Approved :: MIT License",
    "Topic :: Utilities",
]
packages = [
    { include = "mdrsclient" }
]

[tool.poetry.dependencies]
python = "^3.10"
requests = "^2.32.3"
requests-toolbelt = "^1.0.0"
python-dotenv = "^1.0.1"
pydantic = "^2.8.2"
pydantic-settings = "^2.3.4"
PyJWT = "^2.8.0"
validators = "^0.33.0"

[tool.poetry.group.dev.dependencies]
black = "^24.2.2"
flake8 = "^7.1.0"
Flake8-pyproject = "^1.2.3"
isort = "^5.13.2"
pyright = "^1.1.372"

[tool.poetry.scripts]
mdrs = 'mdrsclient.__main__:main'

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
target-version = ['py310']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.venv
  | __pycache__
  | dist
)/
'''

[tool.flake8]
exclude = ".git, .venv, __pycache__, dist"
max-complexity = 10
max-line-length = 120

[tool.isort]
profile = "black"
line_length = 120

[tool.mypy]

[tool.pyright]
typeCheckingMode = "basic"
exclude = ["**/__pycache__", "**/.*", "dist"]
#reportUnknownMemberType = "warning"
#reportUnknownVariableType = "warning"
